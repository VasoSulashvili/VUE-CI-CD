name: main workflow
on: [push]
jobs:
  build-job:
    name: Build Job
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: Cache node modules
        id: cache
        uses: actions/cache@v4
        with:
          path: app/node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: cd app && npm install

      - name: Build
        run: cd app && npm run build

      - name: Generate production artifacts
        run: cd app/dist && zip -r build.zip ./ -x '*.git*'

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: app/dist/build.zip

  lint-job:
    name: Lint Job
    needs: [build-job]
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: Cache node modules
        id: cache
        uses: actions/cache@v4
        with:
          path: app/node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: cd app && npm install

      - name: Run Lints
        run: cd app && npm run lint

  security-audit-job:
    name: Security Audit Job
    needs: [build-job]
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Check for vulnerabilities
        run: cd app && npm audit --audit-level=high



  static-analysis-job:
    name: Static Analysis Job
    needs: [build-job]
    runs-on: ubuntu-22.04
    permissions:
      security-events: write
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: Cache node modules
        id: cache
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json') }}
          path: app/node_modules

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: cd app && npm install

      - name: Analyze code
        uses: github/codeql-action/analyze@v3
